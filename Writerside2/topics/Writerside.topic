<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="Writerside" id="Writerside">

    <p>
        The %product% builder

        Test <format style="superscript">test superscript</format>

        Test <format style="subscript">test subscript</format>
        If your documentation sources are hosted on <a href="https://github.com/">GitHub</a>,
        you can use <a href="https://github.com/features/actions">GitHub Actions</a>
        to build your documentation website
        and deploy it to <a href="https://pages.github.com/">GitHub Pages</a>.</p>
    <p>
        For more information about hosting your documentation sources on GitHub.</p>


    <procedure title="Build and test produced artifacts" id="test">
        <p>
            The %product% builder produces a report with all problems that occurred during the build.
            You can view this report manually
            or configure a separate job that automatically checks the report
            and fails the workflow if it contains errors.</p>
        <step>
            Add <path>report.json</path> to the artifact that the <code>build</code> job produces and saves.</step>
        <step>
            Add the <code>test</code> job to the workflow.</step>
        <p>
            Here is what the workflow from the previous example will look like:</p>

        <code-block src="github-build.yml" lang="yaml" collapsible="true" collapsed-title="build-docs.yml"
                    include-lines="1-6,11-15,22-43,45-59"/>
        <p>
            After you commit and push this workflow,
            the <code>test</code> job will run only if the <code>build</code> job finished successfully,
            and it consists of the following steps:</p>
        <list>
            <li>
                Download the <code>docs</code> artifact into <path>artifacts</path>
                using the <a href="https://github.com/marketplace/actions/download-a-build-artifact">actions/download-artifact@v4</a> action.</li>
            <li>
                Parse <path>report.json</path>
                using the <a href="https://github.com/marketplace/actions/writerside-doc-errors-checker">JetBrains/writerside-checker-action@v1</a> action,
                which fails the job if there are errors in the build report.</li>
        </list>
    </procedure>
    <procedure title="Build, test, and publish to GitHub Pages" id="publish">
        <p>
            You can publish the produced artifacts manually or in a separate workflow.
            However, if you want continuous delivery automation, configure a job in the same workflow
            that will deploy every successfully built and tested artifact to GitHub Pages.</p>
        <step>
            <p>Enable publishing to GitHub Pages with a custom GitHub Actions workflow.</p>

            <p>
                Open the repository on GitHub, click <control>Settings</control>,
                then click <control>Pages</control> under <control>Code and automation</control>,
                and then select <control>GitHub Actions</control> as the <control>Source</control>
                under <control>Build and deployment</control>.</p></step>
        <step>
            <p>
                In the file,
                set the <code>web-path</code> parameter for <code>images</code> to the GitHub repository name.</p>
            <code-block lang="xml">
                <![CDATA[
                <ihp version="2.0">
                    <topics dir="topics"/>
                    <images dir="images" web-path="my-docs-repo"/>
                    <instance src="hi.tree"/>
                </ihp>
                ]]>
            </code-block></step>
        <step>
            Assign write permissions for the <code>id-token</code> and <code>pages</code> scopes in your workflow.</step>
        <step>
            Add the <code>deploy</code> job to the workflow.</step>
        <p>
            Here is what the workflow from the previous example will look like:</p>
        <code-block src="github-build.yml" lang="yaml" collapsible="true" collapsed-title="build-docs.yml"
                    include-lines="1-15,22-43,45-85"/>
        <p>
            After you commit and push this workflow,
            the <code>deploy</code> job will run only if both <code>build</code> and <code>test</code> finish successfully,
            and it consists of the following steps:</p>
        <list>
            <li>
                Download the <code>docs</code> artifact
                using the <a href="https://github.com/marketplace/actions/download-a-build-artifact">actions/download-artifact@v4</a> action.</li>
            <li>
                Unzip the website archive using the <code>unzip</code> command.</li>
            <li>
                Enable GitHub Pages using the <a href="https://github.com/marketplace/actions/configure-github-pages">actions/configure-pages@v4</a> action.</li>
            <li>
                Package and upload an artifact that can be deployed to GitHub Pages
                using the <a href="https://github.com/marketplace/actions/upload-github-pages-artifact">actions/upload-pages-artifact@v3</a> action.</li>
            <li>
                Deploy the artifact to GitHub Pages
                using the <a href="https://github.com/marketplace/actions/deploy-github-pages-site">actions/deploy-pages@v4</a>.</li>
        </list>
        <p>
            If the workflow is successful,
            the <code>deploy</code> job will output the URL to the published documentation.</p>
    </procedure>
    <procedure title="Upload search indexes" id="search">
        <p>
            If you also configure Algolia search,
            the complete workflow that automatically updates the search indexes
            after a successful deployment will look like this:</p>
        <code-block src="github-build.yml" lang="yaml" collapsible="true" collapsed-title="build-docs.yml"/>
    </procedure>
</topic>