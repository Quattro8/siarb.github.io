<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="API oneOf, anyOf, allOf, not XML" id="API-oneOf-anyOf-allOf-not-XML">

    <p>
        OpenAPI 3.0 provides several keywords which you can use to combine schemas.
        You can use these keywords to create a complex schema, or validate a value against multiple criteria.
    </p>

    <list>
        <li>oneOf – validates the value against exactly one of the subschemas</li>
        <li>allOf – validates the value against all the subschemas</li>
        <li>anyOf – validates the value against any (one or more) of the subschemas</li>
    </list>

    <p>
        Besides these, there is a <code>not</code> keyword which you can use to make sure the value is not valid against
        the specified schema.
    </p>

    <chapter title="oneOf" id="oneof">
        <api-schema openapi-path="././api-sources/API_oneOf_Referenced.yaml" name="Cat"/>
        <api-schema openapi-path="././api-sources/API_oneOf_Referenced.yaml" name="Dog"/>
    </chapter>

    <chapter title="anyOf" id="anyof">
        <p>
            Use the <code>anyOf</code> keyword to validate the data against any amount of the given subschemas.
            That is, the data may be valid against one or more subschemas at the same time.
        </p>

        <api-schema openapi-path="api-sources/API_anyOf_Referenced.yaml" name="PetByAge"/>
        <api-schema openapi-path="api-sources/API_anyOf_Referenced.yaml" name="PetByType"/>
    </chapter>


</topic>