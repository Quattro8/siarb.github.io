name: Build documentation

on:
  # If specified, the workflow will be triggered automatically once you push to the `main` branch.
  # Replace `main` with your branchâ€™s name
  push:
    branches: ["main"]
  # Specify to run a workflow manually from the Actions tab on GitHub
  workflow_dispatch:

# Gives the workflow permissions to clone the repo and create a page deployment
permissions:
  id-token: write
  pages: write

env:
  # Name of module and id separated by a slash
  INSTANCE: Writerside2/auto
  # Replace HI with the ID of the instance in capital letters
  ARTIFACT: webHelpAUTO2-all.zip
  # Writerside docker image version
  DOCKER_VERSION: '233.14938'
  # Add the variable below to upload Algolia indexes
  # Replace HI with the ID of the instance in capital letters
  ALGOLIA_ARTIFACT: algolia-indexes-AUTO.zip
  ALGOLIA_APP_NAME: ERUSDW4898
  ALGOLIA_INDEX_NAME: index
  ALGOLIA_KEY: ${{ secrets.ALGOLIA_KEY }}
  CONFIG_JSON_PRODUCT: auto
  CONFIG_JSON_VERSION: 1.2

jobs:
  build:
    runs-on: ubuntu-latest
#    container: registry.jetbrains.team/p/writerside/builder/writerside-builder:2.1.1768-p5404

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Writerside docs using Docker
#        run: |
#          set -x
#          echo "Build documentation script started"
#          export DISPLAY=:99
#          Xvfb :99 &
#          git config --global --add safe.directory .
#          /opt/builder/bin/idea.sh helpbuilderinspect -source-dir . -product ${{ env.INSTANCE }} -fx --runner github -output-dir ./artifacts/ || true
#          echo "Test existing artifacts"
#          test -e ./artifacts/${{ env.ARTIFACT }} && echo ${{ env.ARTIFACT }} exists
        uses: JetBrains/writerside-github-action@v5
        with:
          instance: ${{ env.INSTANCE }}
          artifact: ${{ env.ARTIFACT }}
          docker-version: ${{ env.DOCKER_VERSION }}

      - name: List artifacts directory
        run: |
          ls -alR ./artifacts

      - name: Upload documentation
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: |
            artifacts/${{ env.ARTIFACT }}
            artifacts/report.json
            artifacts/xliffSrcAUTO.zip
          retention-days: 7

      # Add the step below to upload Algolia indexes
      - name: Upload algolia-indexes
        uses: actions/upload-artifact@v4
        with:
          name: algolia-indexes
          path: artifacts/${{ env.ALGOLIA_ARTIFACT }}
          retention-days: 7

  # Add the job below and artifacts/report.json on Upload documentation step above if you want to fail the build when documentation contains errors
  test:
    # Requires build job results
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs
          path: artifacts

      - name: Test documentation
        uses: JetBrains/writerside-checker-action@v1
        with:
          instance: ${{ env.INSTANCE }}

  publish-indexes:
    # Requires the build-job results
    needs: build
    runs-on: ubuntu-latest
    container:
      image: registry.jetbrains.team/p/writerside/builder/algolia-publisher:2.0.32-3

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: algolia-indexes

      - name: Unzip artifact
        run: |
          unzip -O UTF-8 -qq ${{ env.ALGOLIA_ARTIFACT }} -d algolia-indexes
          env "algolia-key=${{env.ALGOLIA_KEY}}" java -jar /opt/builder/help-publication-agent.jar \
          update-index \
          --application-name ${{env.ALGOLIA_APP_NAME}} \
          --index-name ${{env.ALGOLIA_INDEX_NAME}} \
          --product ${{env.CONFIG_JSON_PRODUCT}} \
          --version ${{env.CONFIG_JSON_VERSION}} \
          --index-directory algolia-indexes

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    # Requires the build job results
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: docs

      - name: Unzip artifact
        run: |
          unzip -O UTF-8 -qq ${{ env.ARTIFACT }} -d dir

      - name: Setup Pages
        uses: actions/configure-pages@v4.0.0

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          path: dir

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4